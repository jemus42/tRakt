% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trakt-media-stats.R
\name{media_stats}
\alias{media_stats}
\alias{trakt.shows.stats}
\alias{trakt.movies.stats}
\alias{trakt.seasons.stats}
\alias{trakt.episodes.stats}
\title{Get a show or movie's stats}
\usage{
trakt.shows.stats(target)

trakt.movies.stats(target)

trakt.seasons.stats(target, season = 1L)

trakt.episodes.stats(target, season = 1L, episode = 1L)
}
\arguments{
\item{target}{\code{character(1)}: The ID of the item requested. Preferably the
\code{Trakt ID} (e.g. \code{1390}), \code{slug} (e.g. \code{"game-of-thrones"}), or \code{IMDb ID} (e.g. \code{"tt0944947"}).
Can also be of length greater than 1, in which case the function is called on all
\code{target} values separately and the result is combined.}

\item{season}{\code{integer(1) [1L]}: The season and eisode number. If longer,
e.g. \code{1:5}, the function is vectorized and the output will be
combined. This may result in \emph{a lot} of API calls. Use wisely.}

\item{episode}{\code{integer(1) [1L]}: The season and eisode number. If longer,
e.g. \code{1:5}, the function is vectorized and the output will be
combined. This may result in \emph{a lot} of API calls. Use wisely.}
}
\value{
A \link[tibble:tibble-package]{tibble()}.
}
\description{
The data contains watchers, playes, collectors, comments, lists, and votes.
#' @details
The API methods for these functions are:
}
\details{
\itemize{
\item \href{https://trakt.docs.apiary.io/#reference/movies/stats/get-movie-stats}{/movies/:id/stats}
\item \href{https://trakt.docs.apiary.io/#reference/shows/stats/get-show-stats}{/shows/:id/stats}
\item \href{https://trakt.docs.apiary.io/#reference/seasons/stats/get-season-stats}{/shows/:id/seasons/:season/stats}
\item \href{https://trakt.docs.apiary.io/#reference/episodes/stats/get-episode-stats}{/shows/:id/seasons/:season/episodes/:episode/stats}
}
}
\examples{
# Stats for a movie
trakt.movies.stats("inception-2010")
\dontrun{
# Stats for multiple shows at once
trakt.shows.stats(c("breaking-bad", "game-of-thrones"))

# Stats for multiple episodes
trakt.episodes.stats("futurama", season = 1, episode = 1:7)
}
}
