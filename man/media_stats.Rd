% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/media_stats.R
\name{media_stats}
\alias{media_stats}
\alias{shows_stats}
\alias{movies_stats}
\alias{seasons_stats}
\alias{episodes_stats}
\title{Get a show or movie's (or season's or episode's) stats}
\usage{
shows_stats(id)

movies_stats(id)

seasons_stats(id, season = 1L)

episodes_stats(id, season = 1L, episode = 1L)
}
\arguments{
\item{id}{\code{character(1)}: The ID of the item requested. Preferably the
\code{trakt} ID (e.g. \code{1429}). Other options are the trakt.tv \code{slug} (e.g. \code{"the-wire"})
or \code{imdb} ID (e.g. \code{"tt0306414"}).
Can also be of length greater than 1, in which case the function is called on all
\code{id} values separately and the result is combined. See
\code{vignette("finding-things", package = "tRakt")} for more details.}

\item{season}{\code{integer(1) [1L]}: The season and eisode number. If longer,
e.g. \code{1:5}, the function is vectorized and the output will be
combined. This may result in \emph{a lot} of API calls. Use wisely.}

\item{episode}{\code{integer(1) [1L]}: The season and eisode number. If longer,
e.g. \code{1:5}, the function is vectorized and the output will be
combined. This may result in \emph{a lot} of API calls. Use wisely.}
}
\value{
A \link[tibble:tibble-package]{tibble()}.
}
\description{
The data contains watchers, playes, collectors, comments, lists, and votes.
}
\details{
The API methods for these functions are:
\itemize{
\item \href{https://trakt.docs.apiary.io/#reference/movies/stats/get-movie-stats}{/movies/:id/stats}
\item \href{https://trakt.docs.apiary.io/#reference/shows/stats/get-show-stats}{/shows/:id/stats}
\item \href{https://trakt.docs.apiary.io/#reference/seasons/stats/get-season-stats}{/shows/:id/seasons/:season/stats}
\item \href{https://trakt.docs.apiary.io/#reference/episodes/stats/get-episode-stats}{/shows/:id/seasons/:season/episodes/:episode/stats}
}
}
\examples{
# Stats for a movie
movies_stats("inception-2010")
\dontrun{
# Stats for multiple shows at once
shows_stats(c("breaking-bad", "game-of-thrones"))

# Stats for multiple episodes
episodes_stats("futurama", season = 1, episode = 1:7)
}
}
