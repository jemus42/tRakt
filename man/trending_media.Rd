% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynamic-lists.R
\name{trending_media}
\alias{trending_media}
\alias{movies_trending}
\alias{shows_trending}
\title{Trending media}
\usage{
movies_trending(limit = 10, extended = c("min", "full"),
  query = NULL, years = NULL, genres = NULL, languages = NULL,
  countries = NULL, runtimes = NULL, ratings = NULL,
  certifications = NULL)

shows_trending(limit = 10, extended = c("min", "full"), query = NULL,
  years = NULL, genres = NULL, languages = NULL, countries = NULL,
  runtimes = NULL, ratings = NULL, certifications = NULL,
  networks = NULL, status = NULL)
}
\arguments{
\item{limit}{\code{integer(1) [10L]}: Number of items to return. Must be greater
than \code{0} and will be coerced via \code{as.integer()}.}

\item{extended}{\code{character(1)}: Either \code{"min"} (API default) or \code{"full"}. The latter
returns more variables and should generally only be used if required.
See \code{vignette("finding-things", package = "tRakt")} for more details.}

\item{query}{\code{character(1)}: Search string for titles and descriptions.
For \code{search_query()} other fields are searched depending on the \code{type} of media.
See \href{https://trakt.docs.apiary.io/#reference/search/text-query}{the API docs} for a
full reference.}

\item{years}{\code{character | integer}: 4-digit year (\code{2010}) \strong{or} range,
e.g. \code{"2010-2020"}. Can also be an integer vector of length two which will be
coerced appropriately, e.g. \code{c(2010, 2020)}.}

\item{genres}{\code{character(n)}: Genre  slug(s).
See \code{\link{trakt_genres}} for a table of genres.
Multiple values are allowed and will be concatenated.}

\item{languages}{\code{character(n)}: Two-letter language code(s).
Also see \code{\link{trakt_languages}} for available languages (code and name).}

\item{countries}{\code{character(n)}: Two-letter country code(s).
See \code{\link{trakt_countries}}.}

\item{runtimes}{\code{character | integer}: Integer range in minutes, e.g. \code{30-90}.
Can also be an integer vector of length two which will be coerced appropriately.}

\item{ratings}{\code{character | integer}:  Integer range between \code{0} and \code{100}.
Can also be an integer vector of length two which will be coerced appropriately.
Note that user-supplied ratings are in the range of 1 to 10, yet the ratings
on the site itself are scaled to the range of 1 to 100.}

\item{certifications}{\code{character(n)}: Certification(s) like \code{pg-13}.
Multiple values are allowed. Use \code{\link{trakt_certifications}} for reference.
Note that there are different certifications for shows and movies.}

\item{networks}{\code{character(n)}: (Shows only) Network name like \code{HBO}.
See \code{\link{trakt_networks}} for a list of known networks.}

\item{status}{\code{character(n)}: (Shows only) The status of the shows.
One of \code{"returning series"}, \code{"in production"}, \code{"planned"},
\code{"canceled"}, or \code{"ended"}.}
}
\value{
A \link[tibble:tibble-package]{tibble()}. If the function has a \code{limit} parameter
(defaulting to \code{10}), this will be the (maximum) number of rows of the \code{tibble}.
If there are no results (or the API is unreachable), an empty \code{tibble()} is returned.
}
\description{
These functions return the trending movies/shows on trakt.tv.
}
\section{The Dynamic Lists on trakt.tv}{


These functions access the automatically updated lists provided by trakt.tv.
Each function comes in two flavors: Shows or movies. The following descriptions
are adapted directly from the
\href{https://trakt.docs.apiary.io/#reference/movies/popular/get-popular-movies}{API reference}.
\itemize{
\item \link[=popular_media]{Popular}: Popularity is calculated using the rating percentage and the number of
ratings.
\item \link[=trending_media]{Trending}: Returns all movies/shows being watched right now.
Movies/shows with the most users are returned first.
\item \link[=played_media]{Played}: Returns the most played (a single user can watch multiple times)
movies/shows in the specified time \code{period}.
\item \link[=watched_media]{Watched}: Returns the most watched (unique users) movies/shows in the specified
time \code{period}.
\item \link[=collected_media]{Collected}: Returns the most collected (unique users) movies/shows in the
specified time \code{period}.
\item \link[=anticipated_media]{Anticipated}: Returns the most anticipated movies/shows based on the number of
lists a movie/show appears on.
\item \link[=updated_media]{Updates}: Returns all movies/shows updated since the specified UTC \code{start_date}.
In this case, the upper bound for \code{limit} is 100.
}

The functions for \strong{Played}, \strong{Watched}, \strong{Collected} and \strong{Played} each return
the same additional variables besides the media information: \code{watcher_count},
\code{play_count}, \code{collected_count}, \code{collector_count}.
}

\seealso{
Other dynamic lists: \code{\link{anticipated_media}},
  \code{\link{collected_media}},
  \code{\link{played_media}}, \code{\link{popular_media}},
  \code{\link{updated_media}}, \code{\link{watched_media}}
}
\concept{dynamic lists}
