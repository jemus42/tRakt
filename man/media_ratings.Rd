% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trakt.ratings.R
\name{media_ratings}
\alias{media_ratings}
\alias{trakt.shows.ratings}
\alias{trakt.movies.ratings}
\alias{trakt.seasons.ratings}
\alias{trakt.episodes.ratings}
\title{Show or movie user ratings}
\usage{
trakt.shows.ratings(target)

trakt.movies.ratings(target)

trakt.seasons.ratings(target, season = 1)

trakt.episodes.ratings(target, season = 1, episode = 1)
}
\arguments{
\item{target}{\code{character(1)}: The \code{id} of the item requested. Either the \code{slug}
(e.g. \code{"game-of-thrones"} for a show, or \code{"bryan-cranston"} for a person),
\code{Trakt ID} (e.g. \code{1390}) or \code{IMDB ID} (e.g. \code{"tt0944947"} or \code{"nm0186505"}).
Can also be of length greater than 1, in which case the function is called on all
\code{target} values separately and combined using \link[purrr:map_df]{purrr::map_df} if possible.}

\item{season}{\code{integer(1) [1L]}: The season number. If longer, e.g. \code{1:5}, the function
is vectorized and the output will be combined via \link[purrr:map_df]{purrr::map_df}.}

\item{episode}{\code{integer(1) [1L]}: The episode number. If longer, e.g. \code{1:13}, the function
is vectorized and the output will be combined via \link[purrr:map_df]{purrr::map_df}.}
}
\value{
A \link[tibble:tibble-package]{tibble}.
}
\description{
Returns a movie's or show's (or season's, or episode's) rating and ratings distribution.
If you \emph{do not} want the full ratings distribution, it is highly advised to
just use \code{*.summary} functions or \code{trakt.seasons.season} for episode ratings.
}
\note{
Since this function is able to work on multi-length inputs for
\code{target}, \code{season} and \code{episode}, it is possible to get a lot of data, \emph{but} at the cost
of one API call \emph{per element in each argument}. Please be kind to the API.
}
\examples{
\dontrun{
trakt.movies.ratings("tron-legacy-2010")
trakt.shows.ratings("game-of-thrones")

# Ratings for seasons 1 through 5
trakt.seasons.ratings("futurama", season = 1:5)

# Ratings for episodes 1 through 7 of season 1
trakt.episodes.ratings("futurama", season = 1, episode = 1:7)
}
}
